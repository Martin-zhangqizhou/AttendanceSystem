{"remainingRequest":"D:\\webLearn\\Vue\\黑马头条\\后台\\publish-admin-test\\node_modules\\babel-loader\\lib\\index.js!D:\\webLearn\\Vue\\黑马头条\\后台\\publish-admin-test\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\webLearn\\Vue\\黑马头条\\后台\\publish-admin-test\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\webLearn\\Vue\\黑马头条\\后台\\publish-admin-test\\src\\views\\login\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\webLearn\\Vue\\黑马头条\\后台\\publish-admin-test\\src\\views\\login\\index.vue","mtime":1607528457858},{"path":"D:\\webLearn\\Vue\\黑马头条\\后台\\publish-admin-test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\webLearn\\Vue\\黑马头条\\后台\\publish-admin-test\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\webLearn\\Vue\\黑马头条\\后台\\publish-admin-test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\webLearn\\Vue\\黑马头条\\后台\\publish-admin-test\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IGxvZ2luIGFzIF9sb2dpbiwgb25Xb2tlcmxvZ2luIH0gZnJvbSAnQC9hcGkvdXNlcic7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnTG9naW5JbmRleCcsCiAgcHJvcHM6IHt9LAogIGNvbXBvbmVudHM6IHt9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB1c2VyOiB7CiAgICAgICAgdXNlcm5hbWU6ICdhZG1pbicsCiAgICAgICAgLy8g5omL5py65Y+3CiAgICAgICAgcGFzc3dvcmQ6ICdhZG1pbicsCiAgICAgICAgLy8g6aqM6K+B56CBCiAgICAgICAgYWdyZWU6IHRydWUgLy/mmK/lkKblkIzmhI/ljY/orq4KCiAgICAgIH0sCiAgICAgIHR5cGU6IHRydWUsCiAgICAgIGxvZ2luTG9hZGluZzogZmFsc2UsCiAgICAgIC8vIOihqOWNlemqjOivgeinhOWImemFjee9rgogICAgICBmb3JtUnVsZXM6IHsKICAgICAgICBhZ3JlZTogW3sKICAgICAgICAgIC8vIOiHquWumuS5ieagoemqjOinhOWIme+8mmh0dHBzOi8vZWxlbWVudC5lbGVtZS5jbi8jL3poLUNOL2NvbXBvbmVudC9mb3JtI3ppLWRpbmcteWkteGlhby15YW4tZ3VpLXplCiAgICAgICAgICAvLyDpqozor4HpgJrov4fvvJpjYWxsYmFjaygpCiAgICAgICAgICAvLyDpqozor4HlpLHotKXvvJpjYWxsYmFjayhuZXcgRXJyb3IoJ+mUmeivr+a2iOaBrycpKQogICAgICAgICAgdmFsaWRhdG9yOiBmdW5jdGlvbiB2YWxpZGF0b3IocnVsZSwgdmFsdWUsIGNhbGxiYWNrKSB7CiAgICAgICAgICAgIGlmICh2YWx1ZSkgewogICAgICAgICAgICAgIGNhbGxiYWNrKCk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgY2FsbGJhY2sobmV3IEVycm9yKCfor7fnlKjmiLflkIzmhI/ljY/orq4nKSk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICAvLyBtZXNzYWdlOiAn6K+35Yu+6YCJ5ZCM5oSP55So5oi35Y2P6K6uJywKICAgICAgICAgIHRyaWdnZXI6ICdjaGFuZ2UnCiAgICAgICAgfV0KICAgICAgfQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7fSwKICB3YXRjaDogewogICAgZGF0YTogZnVuY3Rpb24gZGF0YShuZXdWYWx1ZSwgb2xkVmFsdWUpIHt9CiAgfSwKICBtZXRob2RzOiB7CiAgICBvbkxvZ2luOiBmdW5jdGlvbiBvbkxvZ2luKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgLy8g6KGo5Y2V6aqM6K+BCiAgICAgIC8vIHZhbGlkYXRlIOaWueazleaYr+W8guatpeeahAogICAgICB0aGlzLiRyZWZzWydsb2dpbi1mb3JtJ10udmFsaWRhdGUoZnVuY3Rpb24gKHZhbGlkKSB7CiAgICAgICAgLy8g5aaC5p6c6KGo5Y2V6aqM6K+B5aSx6LSl77yM5YGc5q2i6K+35rGC5o+Q5LqkCiAgICAgICAgaWYgKCF2YWxpZCkgewogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0gLy8g6aqM6K+B6YCa6L+H77yM6K+35rGC55m75b2VCgoKICAgICAgICBfdGhpcy5sb2dpbigpOwogICAgICB9KTsKICAgIH0sCiAgICB3b3JrZXJMb2dpbjogZnVuY3Rpb24gd29ya2VyTG9naW4oKSB7CiAgICAgIHZhciB1c2VyID0gdGhpcy51c2VyOwogICAgICBvbldva2VybG9naW4odXNlcikudGhlbihmdW5jdGlvbiAocmVzKSB7fSk7CiAgICB9LAogICAgbG9naW46IGZ1bmN0aW9uIGxvZ2luKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIC8vIOiOt+WPluihqOWNleaVsOaNru+8iOagueaNruaOpeWPo+imgeaxgue7keWumuaVsOaNru+8iQogICAgICB2YXIgdXNlciA9IHRoaXMudXNlcjsgLy/pqozor4HpgJrov4cg5o+Q5Lqk55m76ZmGCiAgICAgIC8vIOW8gOWQr+eZu+mZhuS4rSBsb2FkaW5nLi4uCgogICAgICB0aGlzLmxvZ2luTG9hZGluZyA9IHRydWU7CgogICAgICBfbG9naW4odXNlcikudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgY29uc29sZS5sb2cocmVzKTsKCiAgICAgICAgX3RoaXMyLiRtZXNzYWdlKHsKICAgICAgICAgIG1lc3NhZ2U6ICfnmbvpmYbmiJDlip8nLAogICAgICAgICAgdHlwZTogJ3N1Y2Nlc3MnCiAgICAgICAgfSk7IC8vIOWwhuaOpeWPo+i/lOWbnueahOeUqOaIt+ebuOWFs+aVsOaNruWtmOWCqOWIsOacrOWcsO+8jCDmlrnkvr/mlbDmja7lhbHkuqsKICAgICAgICAvLyDmnKzlnLDlrZjlgqjlj6rog73lrZjlgqgg5a2X56ym5LiyCiAgICAgICAgLy8g5aaC5p6c6ZyA6KaB5a2Y5YKo5a+56LGh44CB5pWw57uE55u45YWz55qE57G75Z6L77yM5YiZ5oqK5LuW5Lus6L2s5YyW5Li6SlNPTuagvOW8j+eahOWtl+espuS4sui/m+ihjOWtmOWCqAoKCiAgICAgICAgd2luZG93LmxvY2FsU3RvcmFnZS5zZXRJdGVtKCd1c2VyJywgSlNPTi5zdHJpbmdpZnkocmVzLmRhdGEpKTsgLy/ot7PovazliLDpppbpobUKCiAgICAgICAgX3RoaXMyLiRyb3V0ZXIucHVzaCh7CiAgICAgICAgICBuYW1lOiAnaG9tZScKICAgICAgICB9KTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikgewogICAgICAgIF90aGlzMi4kbWVzc2FnZS5lcnJvcign55m75b2V5aSx6LSl77yM5omL5py65Y+35oiW6aqM6K+B56CB6ZSZ6K+vJyk7CiAgICAgIH0pLmZpbmFsbHkoZnVuY3Rpb24gKHJlcykgewogICAgICAgIC8vIOWFs+mXrSBsb2FkaW5nCiAgICAgICAgX3RoaXMyLmxvZ2luTG9hZGluZyA9IGZhbHNlOwogICAgICB9KTsKICAgIH0KICB9LAogIGZpbHRlcnM6IHsKICAgIGZuTmFtZTogZnVuY3Rpb24gZm5OYW1lKHZhbHVlKSB7CiAgICAgIHJldHVybiB2YWx1ZTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoFA,SAAA,KAAA,IAAA,MAAA,EAAA,YAAA,QAAA,YAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,KAAA,EAAA,EAFA;AAGA,EAAA,UAAA,EAAA,EAHA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,IAAA,EAAA;AACA,QAAA,QAAA,EAAA,OADA;AACA;AACA,QAAA,QAAA,EAAA,OAFA;AAEA;AACA,QAAA,KAAA,EAAA,IAHA,CAGA;;AAHA,OADA;AAMA,MAAA,IAAA,EAAA,IANA;AAOA,MAAA,YAAA,EAAA,KAPA;AAQA;AACA,MAAA,SAAA,EAAA;AACA,QAAA,KAAA,EAAA,CACA;AACA;AACA;AACA;AACA,UAAA,SAAA,EAAA,mBAAA,IAAA,EAAA,KAAA,EAAA,QAAA,EAAA;AACA,gBAAA,KAAA,EAAA;AACA,cAAA,QAAA;AACA,aAFA,MAEA;AACA,cAAA,QAAA,CAAA,IAAA,KAAA,CAAA,SAAA,CAAA,CAAA;AACA;AACA,WAVA;AAWA;AACA,UAAA,OAAA,EAAA;AAZA,SADA;AADA;AATA,KAAA;AA4BA,GAlCA;AAmCA,EAAA,QAAA,EAAA,EAnCA;AAqCA,EAAA,KAAA,EAAA;AACA,IAAA,IADA,gBACA,QADA,EACA,QADA,EACA,CAEA;AAHA,GArCA;AA0CA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,qBACA;AAAA;;AACA;AACA;AACA,WAAA,KAAA,CAAA,YAAA,EAAA,QAAA,CAAA,UAAA,KAAA,EAAA;AACA;AACA,YAAA,CAAA,KAAA,EAAA;AACA;AACA,SAJA,CAMA;;;AACA,QAAA,KAAA,CAAA,KAAA;AACA,OARA;AASA,KAbA;AAcA,IAAA,WAdA,yBAcA;AACA,UAAA,IAAA,GAAA,KAAA,IAAA;AACA,MAAA,YAAA,CAAA,IAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA,CAEA,CAFA;AAGA,KAnBA;AAoBA,IAAA,KApBA,mBAoBA;AAAA;;AACA;AACA,UAAA,IAAA,GAAA,KAAA,IAAA,CAFA,CAGA;AACA;;AACA,WAAA,YAAA,GAAA,IAAA;;AACA,MAAA,MAAA,CAAA,IAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,GAAA;;AACA,QAAA,MAAA,CAAA,QAAA,CAAA;AACA,UAAA,OAAA,EAAA,MADA;AAEA,UAAA,IAAA,EAAA;AAFA,SAAA,EAFA,CAMA;AACA;AACA;;;AACA,QAAA,MAAA,CAAA,YAAA,CAAA,OAAA,CAAA,MAAA,EAAA,IAAA,CAAA,SAAA,CAAA,GAAA,CAAA,IAAA,CAAA,EATA,CAUA;;AACA,QAAA,MAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AACA,UAAA,IAAA,EAAA;AADA,SAAA;AAGA,OAdA,EAcA,KAdA,CAcA,UAAA,GAAA,EAAA;AACA,QAAA,MAAA,CAAA,QAAA,CAAA,KAAA,CAAA,gBAAA;AACA,OAhBA,EAgBA,OAhBA,CAgBA,UAAA,GAAA,EAAA;AACA;AACA,QAAA,MAAA,CAAA,YAAA,GAAA,KAAA;AACA,OAnBA;AAoBA;AA9CA,GA1CA;AA0FA,EAAA,OAAA,EAAA;AACA,IAAA,MAAA,EAAA,gBAAA,KAAA,EAAA;AACA,aAAA,KAAA;AACA;AAHA;AA1FA,CAAA","sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <!--\r\n      el-form 表单组件\r\n      每个表单项都必须使用 el-form-item 组件包裹\r\n     -->\r\n\r\n    <div class=\"login-form-wrap\">\r\n      <!--\r\n        配置 Form表单验证\r\n        1. 给 el-from 组件绑定 model 为表单数据对象\r\n        2. 给需要验证的表单项 el-form-item 绑定 prop 属性\r\n           注意：prop 属性需要指定表单对象中的数据名称\r\n        3. 通过 el-from 组件的 rules 属性配置验证规则\r\n        4. ref 的作用主要用来获取表单组件手动触发验证\r\n      -->\r\n<!--      <div class=\"login-head\">-->\r\n<!--        <h1>管理员</h1>-->\r\n<!--      </div>-->\r\n      <el-form class=\"login-form\"\r\n               ref=\"login-form\"\r\n               :model=\"user\"\r\n               :rules=\"formRules\"\r\n               :hidden=\"type\"\r\n      >\r\n        <el-form-item prop=\"username\">\r\n          <el-input v-model=\"user.username\"\r\n                    placeholder=\"请输入手机号\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"password\">\r\n          <el-input v-model=\"user.password\" placeholder=\"请输入验证码\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"agree\">\r\n          <el-checkbox v-model=\"user.agree\"\r\n          >我已阅读并同意用户协议和隐私条款</el-checkbox\r\n          >\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"success\" size=\"mini\" @click=\"type = false\" round>切换到管理员</el-button>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button class=\"login-btn\"\r\n                     type=\"primary\"\r\n                     @click=\"workerLogin\"\r\n                     :loading=\"loginLoading\"\r\n          >登录</el-button\r\n          >\r\n        </el-form-item>\r\n      </el-form>\r\n      <el-form class=\"login-form\"\r\n               ref=\"login-form\"\r\n               :model=\"user\"\r\n               :rules=\"formRules\"\r\n               :hidden=\"!type\"\r\n      >\r\n        <el-form-item prop=\"username\">\r\n          <el-input v-model=\"user.username\"\r\n                    placeholder=\"请输入手机号\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"password\">\r\n          <el-input v-model=\"user.password\" placeholder=\"请输入验证码\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"agree\">\r\n          <el-checkbox v-model=\"user.agree\"\r\n          >我已阅读并同意用户协议和隐私条款</el-checkbox\r\n          >\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"success\" size=\"mini\" @click=\"type = false\" round>切换到员工</el-button>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button class=\"login-btn\"\r\n                     type=\"primary\"\r\n                     @click=\"onLogin\"\r\n                     :loading=\"loginLoading\"\r\n          >登录</el-button\r\n          >\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import { login, onWokerlogin } from '@/api/user'\r\nexport default {\r\n  name: 'LoginIndex',\r\n  props: {},\r\n  components: {\r\n  },\r\n  data () {\r\n    return {\r\n      user: {\r\n        username: 'admin', // 手机号\r\n        password: 'admin', // 验证码\r\n        agree : true //是否同意协议\r\n      },\r\n      type: true,\r\n      loginLoading : false,\r\n      // 表单验证规则配置\r\n      formRules: {\r\n        agree: [\r\n          {\r\n            // 自定义校验规则：https://element.eleme.cn/#/zh-CN/component/form#zi-ding-yi-xiao-yan-gui-ze\r\n            // 验证通过：callback()\r\n            // 验证失败：callback(new Error('错误消息'))\r\n            validator: (rule, value, callback) => {\r\n              if (value){\r\n                callback()\r\n              }else {\r\n                callback(new Error('请用户同意协议'))\r\n              }\r\n            },\r\n            // message: '请勾选同意用户协议',\r\n            trigger: 'change'\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n  },\r\n  watch: {\r\n    data (newValue, oldValue) {\r\n\r\n    }\r\n  },\r\n  methods: {\r\n    onLogin () {\r\n      // 表单验证\r\n      // validate 方法是异步的\r\n      this.$refs['login-form'].validate(valid => {\r\n        // 如果表单验证失败，停止请求提交\r\n        if (!valid) {\r\n          return\r\n        }\r\n\r\n        // 验证通过，请求登录\r\n        this.login()\r\n      })\r\n    },\r\n    workerLogin() {\r\n      const user = this.user\r\n      onWokerlogin(user).then(res => {\r\n\r\n      })\r\n    },\r\n    login(){\r\n      // 获取表单数据（根据接口要求绑定数据）\r\n      const user = this.user\r\n      //验证通过 提交登陆\r\n      // 开启登陆中 loading...\r\n      this.loginLoading = true\r\n      login(user).then(res => {\r\n        console.log(res)\r\n        this.$message({\r\n          message : '登陆成功',\r\n          type: 'success'\r\n        })\r\n        // 将接口返回的用户相关数据存储到本地， 方便数据共享\r\n        // 本地存储只能存储 字符串\r\n        // 如果需要存储对象、数组相关的类型，则把他们转化为JSON格式的字符串进行存储\r\n        window.localStorage.setItem('user', JSON.stringify(res.data))\r\n        //跳转到首页\r\n        this.$router.push({\r\n          name : 'home'\r\n        })\r\n      }).catch(err => {\r\n        this.$message.error('登录失败，手机号或验证码错误')\r\n      }).finally(res => {\r\n        // 关闭 loading\r\n        this.loginLoading = false\r\n      })\r\n    }\r\n  },\r\n  filters: {\r\n    fnName : function (value) {\r\n      return value\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n  .login-container {\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background: url('./login_bg.jpg') no-repeat;\r\n    background-size: cover;\r\n    .login-form-wrap {\r\n      min-width: 300px;\r\n      padding: 30px 50px 10px;\r\n      background-color: #fff;\r\n      .login-head {\r\n        display: flex;\r\n        justify-content: center;\r\n        .logo {\r\n          width: 200px;\r\n          height: 57px;\r\n          background: url('./logo_index.png') no-repeat;\r\n          background-size: contain;\r\n        }\r\n      }\r\n      .login-form {\r\n        .login-btn {\r\n          width: 100%;\r\n        }\r\n      }\r\n    }\r\n  }\r\n</style>\r\n"],"sourceRoot":"src/views/login"}]}