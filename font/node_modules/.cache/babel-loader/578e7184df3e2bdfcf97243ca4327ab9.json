{"remainingRequest":"C:\\Users\\springV\\Desktop\\font\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\springV\\Desktop\\font\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\springV\\Desktop\\font\\src\\api\\user.js","dependencies":[{"path":"C:\\Users\\springV\\Desktop\\font\\src\\api\\user.js","mtime":1607528620507},{"path":"C:\\Users\\springV\\Desktop\\font\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\springV\\Desktop\\font\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\springV\\Desktop\\font\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqDQogKueUqOaIt+ebuOWFs+ivt+axguaooeWdlw0KICovCmltcG9ydCByZXF1ZXN0IGZyb20gIkAvdXRpbHMvcmVxdWVzdCI7IC8vIOeUqOaIt+eZu+W9lQoKZXhwb3J0IHZhciBsb2dpbiA9IGZ1bmN0aW9uIGxvZ2luKGRhdGEpIHsKICByZXR1cm4gcmVxdWVzdCh7CiAgICBtZXRob2Q6ICdQT1NUJywKICAgIHVybDogJy9hdHRlbmRzeXMvc3lzL2xvZ2luJywKICAgIGRhdGE6IGRhdGEKICB9KTsKfTsgLy8g6I635Y+W55So5oi35L+h5oGvCgpleHBvcnQgdmFyIGdldFVzZXJQcm9maWxlID0gZnVuY3Rpb24gZ2V0VXNlclByb2ZpbGUoKSB7CiAgLy8gY29uc3QgdXNlciA9IEpTT04ucGFyc2Uod2luZG93LmxvY2FsU3RvcmFnZS5nZXRJdGVtKCd1c2VyJykpCiAgcmV0dXJuIHJlcXVlc3QoewogICAgbWV0aG9kOiAnR0VUJywKICAgIHVybDogJy9tcC92MV8wL3VzZXIvcHJvZmlsZScgLy8g5ZCO56uv6KaB5rGC5oqK6ZyA6KaB5o6I5p2D55qE55So5oi36Lqr5Lu95pS+5Yiw6K+35rGC5aS05LitCiAgICAvLyBheGlvcyDlj6/ku6XpgJrov4cgaGVhZGVycyDpgInpobnorr7nva7or7fmsYLlpLQKICAgIC8vIGhlYWRlcnMgOiB7CiAgICAvLyAgIC8vIOWxnuaAp+WQjeWSjOWAvOmDveW+l+eci+aOpeWPo+eahOimgeaxggogICAgLy8gICAvLyDlsZ7mgKflkI3vvJpBdXRob3JpemF0aW9u77yM5o6l5Y+j6KaB5rGC55qECiAgICAvLyAgIC8vIOWxnuaAp+WAvO+8mkJlYXJlcuepuuagvHRva2Vu5pWw5o2uCiAgICAvLyAgIEF1dGhvcml6YXRpb246IGBCZWFyZXIgJHt1c2VyLnRva2VufWAKICAgIC8vIH0KCiAgfSk7Cn07IC8vIOS/ruaUueeUqOaIt+WktOWDjwovLyDms6jmhI/vvJpkYXRhIOW/hemhu+S8oOmAkiBGb3JtRGF0YSDlr7nosaEKCmV4cG9ydCB2YXIgdXBkYXRlVXNlclBob3RvID0gZnVuY3Rpb24gdXBkYXRlVXNlclBob3RvKGRhdGEpIHsKICByZXR1cm4gcmVxdWVzdCh7CiAgICBtZXRob2Q6ICdQQVRDSCcsCiAgICB1cmw6ICcvbXAvdjFfMC91c2VyL3Bob3RvJywKICAgIGRhdGE6IGRhdGEKICB9KTsKfTsgLy8g5L+u5pS555So5oi35Z+65pys5L+h5oGvCgpleHBvcnQgdmFyIHVwZGF0ZVVzZXJQcm9maWxlID0gZnVuY3Rpb24gdXBkYXRlVXNlclByb2ZpbGUoZGF0YSkgewogIHJldHVybiByZXF1ZXN0KHsKICAgIG1ldGhvZDogJ1BBVENIJywKICAgIHVybDogJy9tcC92MV8wL3VzZXIvcHJvZmlsZScsCiAgICBkYXRhOiBkYXRhCiAgfSk7Cn07IC8vIOeUqOaIt+eZu+W9lQoKZXhwb3J0IHZhciBvbldva2VybG9naW4gPSBmdW5jdGlvbiBvbldva2VybG9naW4oZGF0YSkgewogIHJldHVybiByZXF1ZXN0KHsKICAgIG1ldGhvZDogJ1BPU1QnLAogICAgdXJsOiAnL2F0dGVuZHN5cy93b3JrZXIvd29ya3VzZXIvbG9naW4nLAogICAgZGF0YTogZGF0YQogIH0pOwp9Ow=="},{"version":3,"sources":["C:/Users/springV/Desktop/font/src/api/user.js"],"names":["request","login","data","method","url","getUserProfile","updateUserPhoto","updateUserProfile","onWokerlogin"],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,OAAP,MAAoB,iBAApB,C,CAEA;;AACA,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,IAAD,EAAU;AAC7B,SAAOF,OAAO,CAAC;AACbG,IAAAA,MAAM,EAAE,MADK;AAEbC,IAAAA,GAAG,EAAE,sBAFQ;AAGbF,IAAAA,IAAI,EAAJA;AAHa,GAAD,CAAd;AAKD,CANM,C,CAQP;;AACA,OAAO,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAClC;AACA,SAAOL,OAAO,CAAC;AACbG,IAAAA,MAAM,EAAG,KADI;AAEbC,IAAAA,GAAG,EAAE,uBAFQ,CAGb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAVa,GAAD,CAAd;AAYD,CAdM,C,CAgBP;AACA;;AACA,OAAO,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAAAJ,IAAI,EAAI;AACrC,SAAOF,OAAO,CAAC;AACbG,IAAAA,MAAM,EAAE,OADK;AAEbC,IAAAA,GAAG,EAAE,qBAFQ;AAGbF,IAAAA,IAAI,EAAJA;AAHa,GAAD,CAAd;AAKD,CANM,C,CAQP;;AACA,OAAO,IAAMK,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAL,IAAI,EAAI;AACvC,SAAOF,OAAO,CAAC;AACbG,IAAAA,MAAM,EAAE,OADK;AAEbC,IAAAA,GAAG,EAAE,uBAFQ;AAGbF,IAAAA,IAAI,EAAJA;AAHa,GAAD,CAAd;AAKD,CANM,C,CAQP;;AACA,OAAO,IAAMM,YAAY,GAAG,SAAfA,YAAe,CAACN,IAAD,EAAU;AACpC,SAAOF,OAAO,CAAC;AACbG,IAAAA,MAAM,EAAE,MADK;AAEbC,IAAAA,GAAG,EAAE,kCAFQ;AAGbF,IAAAA,IAAI,EAAJA;AAHa,GAAD,CAAd;AAKD,CANM","sourcesContent":["/**\r\n *用户相关请求模块\r\n */\r\nimport request from \"@/utils/request\";\r\n\r\n// 用户登录\r\nexport const login = (data) => {\r\n  return request({\r\n    method: 'POST',\r\n    url: '/attendsys/sys/login',\r\n    data\r\n  })\r\n}\r\n\r\n// 获取用户信息\r\nexport const getUserProfile = () => {\r\n  // const user = JSON.parse(window.localStorage.getItem('user'))\r\n  return request({\r\n    method : 'GET',\r\n    url: '/mp/v1_0/user/profile',\r\n    // 后端要求把需要授权的用户身份放到请求头中\r\n    // axios 可以通过 headers 选项设置请求头\r\n    // headers : {\r\n    //   // 属性名和值都得看接口的要求\r\n    //   // 属性名：Authorization，接口要求的\r\n    //   // 属性值：Bearer空格token数据\r\n    //   Authorization: `Bearer ${user.token}`\r\n    // }\r\n  })\r\n}\r\n\r\n// 修改用户头像\r\n// 注意：data 必须传递 FormData 对象\r\nexport const updateUserPhoto = data => {\r\n  return request({\r\n    method: 'PATCH',\r\n    url: '/mp/v1_0/user/photo',\r\n    data\r\n  })\r\n}\r\n\r\n// 修改用户基本信息\r\nexport const updateUserProfile = data => {\r\n  return request({\r\n    method: 'PATCH',\r\n    url: '/mp/v1_0/user/profile',\r\n    data\r\n  })\r\n}\r\n\r\n// 用户登录\r\nexport const onWokerlogin = (data) => {\r\n  return request({\r\n    method: 'POST',\r\n    url: '/attendsys/worker/workuser/login',\r\n    data\r\n  })\r\n}\r\n"]}]}