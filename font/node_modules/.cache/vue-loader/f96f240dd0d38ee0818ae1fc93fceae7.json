{"remainingRequest":"D:\\webLearn\\Vue\\黑马头条\\后台\\publish-admin-test\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\webLearn\\Vue\\黑马头条\\后台\\publish-admin-test\\src\\views\\publish\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\webLearn\\Vue\\黑马头条\\后台\\publish-admin-test\\src\\views\\publish\\index.vue","mtime":1607236025864},{"path":"D:\\webLearn\\Vue\\黑马头条\\后台\\publish-admin-test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\webLearn\\Vue\\黑马头条\\后台\\publish-admin-test\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\webLearn\\Vue\\黑马头条\\后台\\publish-admin-test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\webLearn\\Vue\\黑马头条\\后台\\publish-admin-test\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCiAgaW1wb3J0IHsgZ2V0QXJ0aWNsZUNoYW5uZWxzLCBhZGRBcnRpY2xlLCB1cGRhdGVBcnRpY2xlLCBnZXRBcnRpY2xlIH0gZnJvbSAiQC9hcGkvYXJ0aWNsZSI7CiAgaW1wb3J0IHsKICAgIEVsZW1lbnRUaXB0YXAsCiAgICBEb2MsCiAgICBUZXh0LAogICAgUGFyYWdyYXBoLAogICAgSGVhZGluZywKICAgIEJvbGQsCiAgICBVbmRlcmxpbmUsCiAgICBJdGFsaWMsCiAgICBJbWFnZSwKICAgIFN0cmlrZSwKICAgIExpc3RJdGVtLAogICAgQnVsbGV0TGlzdCwKICAgIE9yZGVyZWRMaXN0LAogICAgVG9kb0l0ZW0sCiAgICBUb2RvTGlzdCwKICAgIEhvcml6b250YWxSdWxlLAogICAgRnVsbHNjcmVlbiwKICAgIFByZXZpZXcsCiAgICBDb2RlQmxvY2ssCiAgICBUZXh0Q29sb3IKICB9IGZyb20gJ2VsZW1lbnQtdGlwdGFwJwogIGltcG9ydCAnZWxlbWVudC10aXB0YXAvbGliL2luZGV4LmNzcycKICBpbXBvcnQgeyB1cGxvYWRJbWFnZSB9IGZyb20gJ0AvYXBpL2ltYWdlJwogIGV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnUHVibGlzaEluZGV4JywKICBwcm9wczoge30sCiAgY29tcG9uZW50czogewogICAgJ2VsLXRpcHRhcCc6IEVsZW1lbnRUaXB0YXAsCiAgfSwKICBkYXRhICgpIHsKICAgIHJldHVybiB7CiAgICAgIGV4dGVuc2lvbnM6IFsKICAgICAgICBuZXcgRG9jKCksCiAgICAgICAgbmV3IFRleHQoKSwKICAgICAgICBuZXcgUGFyYWdyYXBoKCksCiAgICAgICAgbmV3IEhlYWRpbmcoeyBsZXZlbDogMyB9KSwKICAgICAgICBuZXcgQm9sZCh7IGJ1YmJsZTogdHJ1ZSB9KSwgLy8g5Zyo5rCU5rOh6I+c5Y2V5Lit5riy5p+T6I+c5Y2V5oyJ6ZKuCiAgICAgICAgbmV3IEltYWdlKHsKICAgICAgICAgIC8vIOm7mOiupOS8muaKiuWbvueJh+eUn+aIkCBiYXNlNjQg5a2X56ym5Liy5ZKM5YaF5a655a2Y5YKo5Zyo5LiA6LW377yM5aaC5p6c6ZyA6KaB6Ieq5a6a5LmJ5Zu+54mH5LiK5LygCiAgICAgICAgICB1cGxvYWRSZXF1ZXN0IChmaWxlKSB7CiAgICAgICAgICAgIC8vIOWmguaenOaOpeWPo+imgeaxgiBDb250ZW50LVR5cGUg5pivIG11bHRpcGFydC9mb3JtLWRhdGHvvIzliJnor7fmsYLkvZPlv4Xpobvkvb/nlKggRm9ybURhdGEKICAgICAgICAgICAgY29uc3QgZmQgPSBuZXcgRm9ybURhdGEoKQogICAgICAgICAgICBmZC5hcHBlbmQoJ2ltYWdlJywgZmlsZSkKICAgICAgICAgICAgLy8g56ysMeS4qiByZXR1cm4g5piv6L+U5ZueIFByb21pc2Ug5a+56LGhCiAgICAgICAgICAgIC8vIOS4uuS7gOS5iO+8n+WboOS4uiBheGlvcyDmnKzouqvlsLHmmK/ov5Tlm54gUHJvbWlzZSDlr7nosaEKICAgICAgICAgICAgcmV0dXJuIHVwbG9hZEltYWdlKGZkKS50aGVuKHJlcyA9PiB7CiAgICAgICAgICAgICAgLy8g6L+Z5LiqIHJldHVybiDmmK/ov5Tlm57mnIDlkI7nmoTnu5PmnpwKICAgICAgICAgICAgICByZXR1cm4gcmVzLmRhdGEuZGF0YS51cmwKICAgICAgICAgICAgfSkKICAgICAgICAgIH0gLy8g5Zu+54mH55qE5LiK5Lyg5pa55rOV77yM6L+U5Zue5LiA5LiqIFByb21pc2U8dXJsPgogICAgICAgIH0pLAogICAgICAgIG5ldyBVbmRlcmxpbmUoKSwgLy8g5LiL5YiS57q/CiAgICAgICAgbmV3IEl0YWxpYygpLCAvLyDmlpzkvZMKICAgICAgICBuZXcgU3RyaWtlKCksIC8vIOWIoOmZpOe6vwogICAgICAgIG5ldyBIb3Jpem9udGFsUnVsZSgpLCAvLyDljY7kuL3nmoTliIblibLnur8KICAgICAgICBuZXcgTGlzdEl0ZW0oKSwKICAgICAgICBuZXcgQnVsbGV0TGlzdCgpLCAvLyDml6Dluo/liJfooagKICAgICAgICBuZXcgT3JkZXJlZExpc3QoKSwgLy8g5pyJ5bqP5YiX6KGoCiAgICAgICAgbmV3IFRvZG9JdGVtKCksCiAgICAgICAgbmV3IFRvZG9MaXN0KCksCiAgICAgICAgbmV3IEZ1bGxzY3JlZW4oKSwKICAgICAgICBuZXcgUHJldmlldygpLAogICAgICAgIG5ldyBDb2RlQmxvY2soKSwKICAgICAgICBuZXcgVGV4dENvbG9yKCkKICAgICAgXSwKICAgICAgY2hhbm5lbHM6IFtdLAogICAgICBhcnRpY2xlOiB7CiAgICAgICAgdGl0bGU6ICcnLCAvLyDmlofnq6DmoIfpopgKICAgICAgICBjb250ZW50OiBgCiAgICAgICAgICAgICAgICA8aDE+SGVhZGluZzwvaDE+CiAgICAgICAgICAgICAgICA8cD5UaGlzIEVkaXRvciBpcyBhd2Vzb21lITwvcD4KICAgICAgICAgICAgICBgLCAvLyDmlofnq6DlhoXlrrkKICAgICAgICBjb3ZlciA6IHsgLy8g5paH56ug5bCB6Z2iCiAgICAgICAgICB0eXBlIDogMCwgLy8g5bCB6Z2i57G75Z6LIC0xOuiHquWKqO+8jDAt5peg5Zu+77yMMS0x5byg77yMMy0z5bygCiAgICAgICAgICBpbWFnZXM6IFtdIC8vIOWwgemdouWbvueJh+eahOWcsOWdgAogICAgICAgIH0sCiAgICAgICAgY2hhbm5lbF9pZDogbnVsbAogICAgICB9LAogICAgICBhcnRpY2xlX2lkOiBudWxsLAogICAgICBmcm9tUnVsZXM6IHsKICAgICAgICB0aXRsZTogWwogICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+ivt+i+k+WFpeaWh+eroOagh+mimCcsIHRyaWdnZXI6ICdibHVyJyB9LAogICAgICAgICAgeyBtaW46IDUsIG1heDogMzAsIG1lc3NhZ2U6ICfplb/luqblnKggNSDliLAgMzAg5Liq5a2X56ymJywgdHJpZ2dlcjogJ2JsdXInIH0KICAgICAgICBdLAogICAgICAgIGNvbnRlbnQ6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgdmFsaWRhdG9yIChydWxlLCB2YWx1ZSwgY2FsbGJhY2spIHsKICAgICAgICAgICAgICBpZiAodmFsdWUgPT09ICc8cD48L3A+Jyl7CiAgICAgICAgICAgICAgICBjYWxsYmFjayhuZXcgRXJyb3IoJ+ivt+i+k+WFpeaWh+eroOWGheWuuScpKQogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBjYWxsYmFjaygpCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+ivt+i+k+WFpeaWh+eroOWGheWuuScsIHRyaWdnZXI6ICdibHVyJyB9LAogICAgICAgIF0sCiAgICAgICAgY2hhbm5lbF9pZDogWwogICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+ivt+mAieaLqeaWh+eroOmikemBkyd9CiAgICAgICAgXQogICAgICB9CiAgICB9CiAgfSwKICBjb21wdXRlZDogewogIH0sCiAgY3JlYXRlZCgpIHsKICAgIHRoaXMubG9hZENoYW5uZWxzKCkKCiAgICAvLyDnlLHkuo7miJHku6zorqnlj5HluIPlkozkv67mlLnkvb/nlKjnmoTmmK8g5ZCM5LiA5Liq57uE5Lu2CiAgICAvLyDmiYDku6Xov5nph4zopoHliKTmlq0KICAgIC8vIOWmguaenOi3r+eUseWPguaVsOS4reaciSBpZCAg5YiZ6K+35rGC5bGV56S65paH56ug5YaF5a65CiAgICBpZiAodGhpcy4kcm91dGUucXVlcnkuaWQpIHsKICAgICAgdGhpcy5sb2FkQXJ0aWNsZSgpCiAgICB9CiAgfSwKICBtb3VudGVkKCkge30sCiAgd2F0Y2g6IHsKICB9LAogIG1ldGhvZHM6IHsKICAgIG9uUHVibGlzaChkcmFmdCA9IGZhbHNlKSB7CiAgICAgIHRoaXMuJHJlZnNbJ3B1Ymxpc2gtZm9ybSddLnZhbGlkYXRlKHZhbGlkID0+IHsKICAgICAgICAvLyDpqozor4HlpLHotKXlgZzmraLmj5DkuqTooajljZUKICAgICAgICBpZiAoIXZhbGlkKXsKICAgICAgICAgIHJldHVybgogICAgICAgIH0KICAgICAgfSkKICAgICAgaWYgKHRoaXMuYXJ0aWNsZV9pZCl7CiAgICAgICAgdXBkYXRlQXJ0aWNsZSh0aGlzLmFydGljbGVfaWQsIHRoaXMuYXJ0aWNsZSwgZHJhZnQpLnRoZW4ocmVzID0+IHsKICAgICAgICAgIGNvbnNvbGUubG9nKHJlcykKICAgICAgICAgIHRoaXMuJG1lc3NhZ2UoewogICAgICAgICAgICBtZXNzYWdlOiBgJHtkcmFmdCA/ICflrZjlhaXojYnnqL8nIDogJ+WPkeW4gyd95oiQ5YqfYCwKICAgICAgICAgICAgdHlwZTogJ3N1Y2Nlc3MnCiAgICAgICAgICB9KQogICAgICAgICAgLy8g6Lez6L2s5Yiw5YaF5a65566h55CG6aG16Z2iCiAgICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCgnL2FydGljbGUnKQogICAgICAgIH0pCiAgICAgIH1lbHNlIHsKICAgICAgICAvLyDmib7liLDmlbDmja7mjqXlj6MKICAgICAgICBhZGRBcnRpY2xlKHRoaXMuYXJ0aWNsZSwgZHJhZnQpLnRoZW4ocmVzID0+IHsKICAgICAgICAgIGNvbnNvbGUubG9nKHJlcykKICAgICAgICAgIHRoaXMuJG1lc3NhZ2UoewogICAgICAgICAgICBtZXNzYWdlOiBgJHtkcmFmdCA/ICflrZjlhaXojYnnqL8nIDogJ+WPkeW4gyd95oiQ5YqfYCwKICAgICAgICAgICAgdHlwZTogJ3N1Y2Nlc3MnCiAgICAgICAgICB9KQogICAgICAgICAgLy8g6Lez6L2s5Yiw5YaF5a65566h55CG6aG16Z2iCiAgICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCgnL2FydGljbGUnKQogICAgICAgIH0pCiAgICAgIH0KICAgIH0sCiAgICBsb2FkQ2hhbm5lbHMgKCkgewogICAgICBnZXRBcnRpY2xlQ2hhbm5lbHMoKS50aGVuKHJlcyA9PiB7CiAgICAgICAgdGhpcy5jaGFubmVscyA9IHJlcy5kYXRhLmRhdGEuY2hhbm5lbHMKICAgICAgfSkKICAgIH0sCiAgICBsb2FkQXJ0aWNsZSAoKSB7CiAgICAgIC8vIOS/ruaUueaWh+eroCDliqDovb3mlofnq6DlhoXlrrkKICAgICAgdGhpcy5hcnRpY2xlX2lkID0gdGhpcy4kcm91dGUucXVlcnkuaWQudG9TdHJpbmcoKQogICAgICBnZXRBcnRpY2xlKHRoaXMuYXJ0aWNsZV9pZCkudGhlbihyZXMgPT4gewogICAgICAgIC8vdGhpcy5hcnRpY2xlID0gcmVzLmRhdGEuZGF0YQogICAgICB9KQogICAgfQogIH0KfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"index.vue","sourceRoot":"src/views/publish","sourcesContent":["<template>\r\n  <div class=\"publish-container\">\r\n    <el-card class=\"box-card\">\r\n      <div slot=\"header\" class=\"clearfix\">\r\n        <div slot=\"header\" class=\"clearfix\">\r\n          <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n            <el-breadcrumb-item :to=\"{ path: '/' }\">首页</el-breadcrumb-item>\r\n            <el-breadcrumb-item>{{ $route.query.id ? '修改文章': '发布文章'}}</el-breadcrumb-item>\r\n          </el-breadcrumb>\r\n        </div>\r\n      </div>\r\n      <el-form ref=\"publish-form\"\r\n               :rules=\"fromRules\"\r\n               :model=\"article\"\r\n               label-width=\"80px\">\r\n        <el-form-item label=\"标题\" prop=\"title\">\r\n          <el-input v-model=\"article.title\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"内容\" prop=\"content\">\r\n          <!-- <el-input type=\"textarea\" v-model=\"article.content\"></el-input> -->\r\n          <el-tiptap\r\n            v-model=\"article.content\"\r\n            :extensions=\"extensions\"\r\n            lang=\"zh\"\r\n            height=\"350\"\r\n            placeholder=\"请输入文章内容\"\r\n          ></el-tiptap>\r\n        </el-form-item>\r\n        <el-form-item label=\"封面\">\r\n          <el-radio-group v-model=\"article.cover.type\">\r\n            <el-radio :label=\"1\">单图</el-radio>\r\n            <el-radio :label=\"3\">三图</el-radio>\r\n            <el-radio :label=\"0\">无图</el-radio>\r\n            <el-radio :label=\"-1\">自动</el-radio>\r\n          </el-radio-group>\r\n        </el-form-item>\r\n        <el-form-item label=\"频道\" prop=\"channel_id\">\r\n          <el-select v-model=\"article.channel_id\" placeholder=\"请选择频道\">\r\n            <el-option\r\n              :label=\"channel.name\"\r\n              :value=\"channel.id\"\r\n              v-for=\"(channel, index) in channels\"\r\n              :key=\"index\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"onPublish(false)\">发表</el-button>\r\n          <el-button @click=\"onPublish(true)\">存入草稿</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import { getArticleChannels, addArticle, updateArticle, getArticle } from \"@/api/article\";\r\n  import {\r\n    ElementTiptap,\r\n    Doc,\r\n    Text,\r\n    Paragraph,\r\n    Heading,\r\n    Bold,\r\n    Underline,\r\n    Italic,\r\n    Image,\r\n    Strike,\r\n    ListItem,\r\n    BulletList,\r\n    OrderedList,\r\n    TodoItem,\r\n    TodoList,\r\n    HorizontalRule,\r\n    Fullscreen,\r\n    Preview,\r\n    CodeBlock,\r\n    TextColor\r\n  } from 'element-tiptap'\r\n  import 'element-tiptap/lib/index.css'\r\n  import { uploadImage } from '@/api/image'\r\n  export default {\r\n  name: 'PublishIndex',\r\n  props: {},\r\n  components: {\r\n    'el-tiptap': ElementTiptap,\r\n  },\r\n  data () {\r\n    return {\r\n      extensions: [\r\n        new Doc(),\r\n        new Text(),\r\n        new Paragraph(),\r\n        new Heading({ level: 3 }),\r\n        new Bold({ bubble: true }), // 在气泡菜单中渲染菜单按钮\r\n        new Image({\r\n          // 默认会把图片生成 base64 字符串和内容存储在一起，如果需要自定义图片上传\r\n          uploadRequest (file) {\r\n            // 如果接口要求 Content-Type 是 multipart/form-data，则请求体必须使用 FormData\r\n            const fd = new FormData()\r\n            fd.append('image', file)\r\n            // 第1个 return 是返回 Promise 对象\r\n            // 为什么？因为 axios 本身就是返回 Promise 对象\r\n            return uploadImage(fd).then(res => {\r\n              // 这个 return 是返回最后的结果\r\n              return res.data.data.url\r\n            })\r\n          } // 图片的上传方法，返回一个 Promise<url>\r\n        }),\r\n        new Underline(), // 下划线\r\n        new Italic(), // 斜体\r\n        new Strike(), // 删除线\r\n        new HorizontalRule(), // 华丽的分割线\r\n        new ListItem(),\r\n        new BulletList(), // 无序列表\r\n        new OrderedList(), // 有序列表\r\n        new TodoItem(),\r\n        new TodoList(),\r\n        new Fullscreen(),\r\n        new Preview(),\r\n        new CodeBlock(),\r\n        new TextColor()\r\n      ],\r\n      channels: [],\r\n      article: {\r\n        title: '', // 文章标题\r\n        content: `\r\n                <h1>Heading</h1>\r\n                <p>This Editor is awesome!</p>\r\n              `, // 文章内容\r\n        cover : { // 文章封面\r\n          type : 0, // 封面类型 -1:自动，0-无图，1-1张，3-3张\r\n          images: [] // 封面图片的地址\r\n        },\r\n        channel_id: null\r\n      },\r\n      article_id: null,\r\n      fromRules: {\r\n        title: [\r\n          { required: true, message: '请输入文章标题', trigger: 'blur' },\r\n          { min: 5, max: 30, message: '长度在 5 到 30 个字符', trigger: 'blur' }\r\n        ],\r\n        content: [\r\n          {\r\n            validator (rule, value, callback) {\r\n              if (value === '<p></p>'){\r\n                callback(new Error('请输入文章内容'))\r\n              } else {\r\n                callback()\r\n              }\r\n            }\r\n          },\r\n          { required: true, message: '请输入文章内容', trigger: 'blur' },\r\n        ],\r\n        channel_id: [\r\n          { required: true, message: '请选择文章频道'}\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n  },\r\n  created() {\r\n    this.loadChannels()\r\n\r\n    // 由于我们让发布和修改使用的是 同一个组件\r\n    // 所以这里要判断\r\n    // 如果路由参数中有 id  则请求展示文章内容\r\n    if (this.$route.query.id) {\r\n      this.loadArticle()\r\n    }\r\n  },\r\n  mounted() {},\r\n  watch: {\r\n  },\r\n  methods: {\r\n    onPublish(draft = false) {\r\n      this.$refs['publish-form'].validate(valid => {\r\n        // 验证失败停止提交表单\r\n        if (!valid){\r\n          return\r\n        }\r\n      })\r\n      if (this.article_id){\r\n        updateArticle(this.article_id, this.article, draft).then(res => {\r\n          console.log(res)\r\n          this.$message({\r\n            message: `${draft ? '存入草稿' : '发布'}成功`,\r\n            type: 'success'\r\n          })\r\n          // 跳转到内容管理页面\r\n          this.$router.push('/article')\r\n        })\r\n      }else {\r\n        // 找到数据接口\r\n        addArticle(this.article, draft).then(res => {\r\n          console.log(res)\r\n          this.$message({\r\n            message: `${draft ? '存入草稿' : '发布'}成功`,\r\n            type: 'success'\r\n          })\r\n          // 跳转到内容管理页面\r\n          this.$router.push('/article')\r\n        })\r\n      }\r\n    },\r\n    loadChannels () {\r\n      getArticleChannels().then(res => {\r\n        this.channels = res.data.data.channels\r\n      })\r\n    },\r\n    loadArticle () {\r\n      // 修改文章 加载文章内容\r\n      this.article_id = this.$route.query.id.toString()\r\n      getArticle(this.article_id).then(res => {\r\n        //this.article = res.data.data\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n\r\n</style>\r\n"]}]}