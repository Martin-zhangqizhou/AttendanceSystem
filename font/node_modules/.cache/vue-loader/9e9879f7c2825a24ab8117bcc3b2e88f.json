{"remainingRequest":"D:\\webLearn\\Vue\\黑马头条\\后台\\publish-admin-test\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\webLearn\\Vue\\黑马头条\\后台\\publish-admin-test\\src\\views\\settings\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\webLearn\\Vue\\黑马头条\\后台\\publish-admin-test\\src\\views\\settings\\index.vue","mtime":1607316131189},{"path":"D:\\webLearn\\Vue\\黑马头条\\后台\\publish-admin-test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\webLearn\\Vue\\黑马头条\\后台\\publish-admin-test\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\webLearn\\Vue\\黑马头条\\后台\\publish-admin-test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\webLearn\\Vue\\黑马头条\\后台\\publish-admin-test\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCiAgaW1wb3J0IHsKICAgIGdldFVzZXJQcm9maWxlLAogICAgdXBkYXRlVXNlclBob3RvLAogICAgdXBkYXRlVXNlclByb2ZpbGUKICB9IGZyb20gJ0AvYXBpL3VzZXInCiAgaW1wb3J0ICdjcm9wcGVyanMvZGlzdC9jcm9wcGVyLmNzcycKICBpbXBvcnQgQ3JvcHBlciBmcm9tICdjcm9wcGVyanMnCiAgaW1wb3J0IGdsb2JhbEJ1cyBmcm9tICdAL3V0aWxzL2dsb2JhbC1idXMnCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnU2V0dGluZ0luZGV4JywKICBwcm9wczoge30sCiAgY29tcG9uZW50czogewogIH0sCiAgZGF0YSAoKSB7CiAgICByZXR1cm4gewogICAgICB1c2VyOiB7CiAgICAgICAgZW1haWw6ICcnLAogICAgICAgIGlkOiBudWxsLAogICAgICAgIGludHJvOiAnJywKICAgICAgICBtb2JpbGU6ICcnLAogICAgICAgIG5hbWU6ICcnLAogICAgICAgIHBob3RvOiAnJwogICAgICB9LCAvLyDnlKjmiLfotYTmlpkKICAgICAgZGlhbG9nVmlzaWJsZSA6IGZhbHNlLCAvL+aOp+WItuS4iuS8oOWbvueJh+ijgeWIh+a1j+iniAogICAgICBwcmV2aWV3SW1hZ2U6ICcnLCAvLyDpooTop4jlm77niYcKICAgICAgY3JvcHBlcjogbnVsbCwgLy8g6KOB5YiH5Zmo56S65L6LCiAgICAgIHVwZGF0ZVBob3RvTG9hZGluZzogZmFsc2UsIC8vIOabtOaWsOeUqOaIt+WktOWDjyBsb2FkaW5nIOeKtuaAgQogICAgICB1cGRhdGVQcm9maWxlTG9hZGluZzogZmFsc2UgLy8g5pu05paw5Z+65pys5L+h5oGv55qEIGxvYWRpbmcg54q25oCBCiAgICB9CiAgfSwKICBjb21wdXRlZDogewogIH0sCiAgY3JlYXRlZCgpIHsKICAgIHRoaXMubG9hZFVzZXIoKQogIH0sCiAgbW91bnRlZCgpIHsKCiAgfSwKICB3YXRjaDogewogIH0sCiAgbWV0aG9kczogewogICAgb25VcGRhdGVVc2VyKCkgewogICAgICAvLyDooajljZXpqozor4EKICAgICAgLy8g6aqM6K+B6YCa6L+H77yM5o+Q5Lqk6KGo5Y2VCgogICAgICAvLyDlvIDlkK8gbG9hZGluZyDnirbmgIEKICAgICAgdGhpcy51cGRhdGVQcm9maWxlTG9hZGluZyA9IHRydWUKICAgICAgY29uc3QgeyBuYW1lLCBpbnRybywgZW1haWwgfSA9IHRoaXMudXNlcgogICAgICB1cGRhdGVVc2VyUHJvZmlsZSh7CiAgICAgICAgbmFtZSwKICAgICAgICBpbnRybywKICAgICAgICBlbWFpbAogICAgICB9KS50aGVuKHJlcyA9PiB7CiAgICAgICAgdGhpcy4kbWVzc2FnZSh7CiAgICAgICAgICB0eXBlOiAnc3VjY2VzcycsCiAgICAgICAgICBtZXNzYWdlOiAn5L+d5a2Y5oiQ5YqfJwogICAgICAgIH0pCiAgICAgICAgLy8g5pu05paw5aS06YOo5b2T5YmN55m75b2V55So5oi355qE5L+h5oGvCiAgICAgICAgLy8g5Y+R5biD6YCa55+l77yM55So5oi35L+h5oGv5bey5L+u5pS5CgogICAgICAgIGdsb2JhbEJ1cy4kZW1pdCgndXBkYXRlLXVzZXInLCB0aGlzLnVzZXIpCiAgICAgIH0pLmNhdGNoKGVyciA9PiB7CiAgICAgICAgdGhpcy4kbWVzc2FnZSh7CiAgICAgICAgICB0eXBlOiAnd2FybmluZycsCiAgICAgICAgICBtZXNzYWdlOiAn5L+d5a2Y5aSx6LSlJwogICAgICAgIH0pCiAgICAgIH0pLmZpbmFsbHkocmVzID0+IHsKICAgICAgICAvLyDlhbPpl60gbG9hZGluZyDnirbmgIEKICAgICAgICB0aGlzLnVwZGF0ZVByb2ZpbGVMb2FkaW5nID0gZmFsc2UKICAgICAgfSkKICAgIH0sCiAgICBsb2FkVXNlcigpewogICAgICBnZXRVc2VyUHJvZmlsZSgpLnRoZW4ocmVzID0+IHsKICAgICAgICB0aGlzLnVzZXIgPSByZXMuZGF0YS5kYXRhCiAgICAgIH0pCiAgICB9LAogICAgb25GaWxlQ2hhbmdlKCkgewogICAgICAvLyDlpITkuo7lm77niYfpooTop4gKICAgICAgY29uc3QgZmlsZSA9IHRoaXMuJHJlZnMuZmlsZQoKICAgICAgY29uc3QgYmxvYkRhdGEgPSB3aW5kb3cuVVJMLmNyZWF0ZU9iamVjdFVSTChmaWxlLmZpbGVzWzBdKQoKICAgICAgdGhpcy5wcmV2aWV3SW1hZ2UgPSBibG9iRGF0YQoKICAgICAgdGhpcy5kaWFsb2dWaXNpYmxlID0gdHJ1ZQoKICAgICAgLy8g5aSE5LqO5Zu+54mH6aKE6KeIIOino+WGs+ebuOWQjOaWh+S7tuS4jeinpuWPkSBjaGFuZ2Ug5LqL5Lu26Zeu6aKYCiAgICAgIHRoaXMuJHJlZnMuZmlsZS52YWx1ZSA9ICcnCiAgICB9LAogICAgb25EaWFsb2dPcGVuZWQoKSB7CiAgICAgIC8vIOWbvueJh+ijgeWIh+WZqOW/hemhu+WfuuS6jiBpbWcg6L+b6KGM5Yid5aeL5YyWCiAgICAgIC8vIOazqOaEj++8mmltZyDlv4XpobvmmK/lj6/op4HnirbmgIHmiY3og73mraPluLjlrozmiJDliJ3lp4vljJYKICAgICAgLy8gICAgICAg5Zug5Li65oiR5Lus6L+Z6YeM6KaB5Zyo5a+56K+d5qGG6YeM6Z2i5Yid5aeL5YyW6KOB5YiH5ZmoCiAgICAgIC8vICAgICAgIOaJgOS7peWKoeW/heimgeWcqOWvueivneahhuWujOWFqOaJk+W8gOeahOeKtuaAgeWOu+i/m+ihjOWIneWni+WMluOAggogICAgICAvLyDojrflj5blm77niYcgRE9NIOiKgueCuQogICAgICBjb25zdCBpbWFnZSA9IHRoaXMuJHJlZnNbJ3ByZXZpZXctaW1hZ2UnXQogICAgICAvLyDnrKwx5qyh5Yid5aeL5YyW5aW95Lul5ZCO77yM5aaC5p6c6aKE6KeI6KOB5YiH55qE5Zu+54mH5Y+R55Sf5LqG5Y+Y5YyW77yM6KOB5YiH5Zmo6buY6K6k5LiN5Lya5pu05pawCiAgICAgIC8vIOWmguaenOmcgOimgemihOiniOWbvueJh+WPkeeUn+WPmOWMluabtOaWsOijgeWIh+WZqO+8mgogICAgICAvLyAgICDmlrnlvI/kuIDvvJroo4HliIflmagucmVwbGFjZSDmlrnms5UKICAgICAgLy8gICAg5pa55byP5LqM77ya6ZSA5q+B6KOB5YiH5Zmo77yM6YeN5paw5Yid5aeL5YyWCiAgICAgIC8vIOWIneWni+WMluijgeWIh+WZqAogICAgICBpZiAodGhpcy5jcm9wcGVyKSB7CiAgICAgICAgdGhpcy5jcm9wcGVyLnJlcGxhY2UodGhpcy5wcmV2aWV3SW1hZ2UpCiAgICAgICAgcmV0dXJuCiAgICAgIH0KICAgICAgdGhpcy5jcm9wcGVyID0gbmV3IENyb3BwZXIoaW1hZ2UsIHsKICAgICAgICB2aWV3TW9kZTogMSwKICAgICAgICBkcmFnTW9kZTogJ25vbmUnLAogICAgICAgIGFzcGVjdFJhdGlvOiAxLAogICAgICAgIGJhY2tncm91bmQ6IGZhbHNlLAogICAgICAgIGNyb3BCb3hSZXNpemFibGU6IGZhbHNlCgogICAgICAgIC8vIOW9k+S9oOenu+WKqOijgeWIh+WZqOeahOaXtuWAmeS8muinpuWPkeiwg+eUqCBjcm9wIOaWueazlQogICAgICAgIC8vIGNyb3AgKGV2ZW50KSB7CiAgICAgICAgLy8gICBjb25zb2xlLmxvZyhldmVudC5kZXRhaWwueCkKICAgICAgICAvLyAgIGNvbnNvbGUubG9nKGV2ZW50LmRldGFpbC55KQogICAgICAgIC8vICAgY29uc29sZS5sb2coZXZlbnQuZGV0YWlsLndpZHRoKQogICAgICAgIC8vICAgY29uc29sZS5sb2coZXZlbnQuZGV0YWlsLmhlaWdodCkKICAgICAgICAvLyAgIGNvbnNvbGUubG9nKGV2ZW50LmRldGFpbC5yb3RhdGUpCiAgICAgICAgLy8gICBjb25zb2xlLmxvZyhldmVudC5kZXRhaWwuc2NhbGVYKQogICAgICAgIC8vICAgY29uc29sZS5sb2coZXZlbnQuZGV0YWlsLnNjYWxlWSkKICAgICAgICAvLyB9CiAgICAgIH0pCiAgICB9LAogICAgb25EaWFsb2dDbG9zZWQgKCkgewogICAgICAvLyDlr7nor53moYblhbPpl63vvIzplIDmr4Hoo4HliIflmagKICAgICAgLy8gdGhpcy5jcm9wcGVyLmRlc3Ryb3koKQogICAgfSwKICAgIG9uVXBkYXRlUGhvdG8oKSB7CiAgICAgIHRoaXMudXBkYXRlUGhvdG9Mb2FkaW5nID0gdHJ1ZQogICAgICAvLyDojrflj5boo4HliIfnmoTlm77niYflr7nosaEKICAgICAgdGhpcy5jcm9wcGVyPy5nZXRDcm9wcGVkQ2FudmFzKCkudG9CbG9iKGZpbGUgPT4gewogICAgICAgIGNvbnN0IGZkID0gbmV3IEZvcm1EYXRhKCkKICAgICAgICBmZC5hcHBlbmQoJ3Bob3RvJywgZmlsZSkKICAgICAgICAvLyDor7fmsYLmm7TmlrDnlKjmiLflpLTlg48KICAgICAgICB1cGRhdGVVc2VyUGhvdG8oZmQpLnRoZW4ocmVzID0+IHsKICAgICAgICAgIC8vIOWFs+mXreWvueivneahhgogICAgICAgICAgdGhpcy5kaWFsb2dWaXNpYmxlID0gZmFsc2UKICAgICAgICAgIC8vIOebtOaOpeaKiuijgeWIh+e7k+aenOeahOaWh+S7tuWvueixoei9rOS4uiBibG9iIOaVsOaNruacrOWcsOmihOiniAogICAgICAgICAgdGhpcy51c2VyLnBob3RvID0gd2luZG93LlVSTC5jcmVhdGVPYmplY3RVUkwoZmlsZSkKICAgICAgICAgIC8vIOWFs+mXreehruWumuaMiemSrueahCBsb2FkaW5nCiAgICAgICAgICB0aGlzLnVwZGF0ZVBob3RvTG9hZGluZyA9IGZhbHNlCiAgICAgICAgICB0aGlzLiRtZXNzYWdlKHsKICAgICAgICAgICAgdHlwZTogJ3N1Y2Nlc3MnLAogICAgICAgICAgICBtZXNzYWdlOiAn5pu05paw5aS05YOP5oiQ5YqfJwogICAgICAgICAgfSkKCiAgICAgICAgICAvLyDmm7TmlrDpobbpg6jnmbvlvZXnlKjmiLfnmoTkv6Hmga8KICAgICAgICAgIGdsb2JhbEJ1cy4kZW1pdCgndXBkYXRlLXVzZXInLCB0aGlzLnVzZXIpCiAgICAgICAgfSkKICAgICAgfSkKCiAgICAgIC8vIOabtOaWsOinhuWbvnMKICAgIH0KICB9LAogIGZpbHRlcnM6IHsKICAgIGZuTmFtZTogZnVuY3Rpb24gKHZhbHVlKSB7CiAgICAgIHJldHVybiB2YWx1ZQogICAgfQogIH0KfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"index.vue","sourceRoot":"src/views/settings","sourcesContent":["<template>\r\n  <div>\r\n    <el-card class=\"box-card\">\r\n      <div slot=\"header\" class=\"clearfix\">\r\n        <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n          <el-breadcrumb-item :to=\"{ path: '/' }\">首页</el-breadcrumb-item>\r\n          <el-breadcrumb-item>个人管理</el-breadcrumb-item>\r\n        </el-breadcrumb>\r\n      </div>\r\n      <el-row>\r\n        <el-col :span=\"15\">\r\n          <el-form ref=\"form\" :model=\"user\" label-width=\"70px\">\r\n            <el-form-item label=\"编号\">\r\n              {{ user.id }}\r\n            </el-form-item>\r\n            <el-form-item label=\"手机\">\r\n              {{ user.mobile }}\r\n            </el-form-item>\r\n            <el-form-item label=\"媒体名称\">\r\n              <el-input v-model=\"user.name\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"媒体介绍\">\r\n              <el-input type=\"textarea\" v-model=\"user.intro\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"邮箱\">\r\n              <el-input v-model=\"user.email\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item>\r\n              <el-button\r\n                type=\"primary\"\r\n                :loading=\"updateProfileLoading\"\r\n                @click=\"onUpdateUser\"\r\n              >保存</el-button>\r\n            </el-form-item>\r\n          </el-form>\r\n        </el-col>\r\n        <el-col :offset=\"2\" :span=\"4\">\r\n\r\n          <!-- <p @click=\"$refs.file.click()\">点击修改头像</p> -->\r\n          <label for=\"file\">\r\n            <el-avatar\r\n              shape=\"square\"\r\n              :size=\"150\"\r\n              fit=\"cover\"\r\n              :src=\"user.photo\">\r\n            </el-avatar>\r\n\r\n            <p>点击修改头像</p>\r\n          </label>\r\n          <input\r\n            id=\"file\"\r\n            type=\"file\"\r\n            ref=\"file\"\r\n            hidden\r\n            @change=\"onFileChange\"\r\n          >\r\n        </el-col>\r\n      </el-row>\r\n    </el-card>\r\n    <el-dialog\r\n      title=\"修改头像\"\r\n      :visible.sync=\"dialogVisible\"\r\n      append-to-body\r\n      @opened=\"onDialogOpened\"\r\n      @closed=\"onDialogClosed\"\r\n    >\r\n      <div class=\"preview-image-wrap\">\r\n        <img\r\n          class=\"preview-image\"\r\n          :src=\"previewImage\"\r\n          ref=\"preview-image\"\r\n        >\r\n      </div>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogVisible = false\">取 消</el-button>\r\n        <el-button\r\n          type=\"primary\"\r\n          :loading=\"updatePhotoLoading\"\r\n          @click=\"onUpdatePhoto\"\r\n        >确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import {\r\n    getUserProfile,\r\n    updateUserPhoto,\r\n    updateUserProfile\r\n  } from '@/api/user'\r\n  import 'cropperjs/dist/cropper.css'\r\n  import Cropper from 'cropperjs'\r\n  import globalBus from '@/utils/global-bus'\r\nexport default {\r\n  name: 'SettingIndex',\r\n  props: {},\r\n  components: {\r\n  },\r\n  data () {\r\n    return {\r\n      user: {\r\n        email: '',\r\n        id: null,\r\n        intro: '',\r\n        mobile: '',\r\n        name: '',\r\n        photo: ''\r\n      }, // 用户资料\r\n      dialogVisible : false, //控制上传图片裁切浏览\r\n      previewImage: '', // 预览图片\r\n      cropper: null, // 裁切器示例\r\n      updatePhotoLoading: false, // 更新用户头像 loading 状态\r\n      updateProfileLoading: false // 更新基本信息的 loading 状态\r\n    }\r\n  },\r\n  computed: {\r\n  },\r\n  created() {\r\n    this.loadUser()\r\n  },\r\n  mounted() {\r\n\r\n  },\r\n  watch: {\r\n  },\r\n  methods: {\r\n    onUpdateUser() {\r\n      // 表单验证\r\n      // 验证通过，提交表单\r\n\r\n      // 开启 loading 状态\r\n      this.updateProfileLoading = true\r\n      const { name, intro, email } = this.user\r\n      updateUserProfile({\r\n        name,\r\n        intro,\r\n        email\r\n      }).then(res => {\r\n        this.$message({\r\n          type: 'success',\r\n          message: '保存成功'\r\n        })\r\n        // 更新头部当前登录用户的信息\r\n        // 发布通知，用户信息已修改\r\n\r\n        globalBus.$emit('update-user', this.user)\r\n      }).catch(err => {\r\n        this.$message({\r\n          type: 'warning',\r\n          message: '保存失败'\r\n        })\r\n      }).finally(res => {\r\n        // 关闭 loading 状态\r\n        this.updateProfileLoading = false\r\n      })\r\n    },\r\n    loadUser(){\r\n      getUserProfile().then(res => {\r\n        this.user = res.data.data\r\n      })\r\n    },\r\n    onFileChange() {\r\n      // 处于图片预览\r\n      const file = this.$refs.file\r\n\r\n      const blobData = window.URL.createObjectURL(file.files[0])\r\n\r\n      this.previewImage = blobData\r\n\r\n      this.dialogVisible = true\r\n\r\n      // 处于图片预览 解决相同文件不触发 change 事件问题\r\n      this.$refs.file.value = ''\r\n    },\r\n    onDialogOpened() {\r\n      // 图片裁切器必须基于 img 进行初始化\r\n      // 注意：img 必须是可见状态才能正常完成初始化\r\n      //       因为我们这里要在对话框里面初始化裁切器\r\n      //       所以务必要在对话框完全打开的状态去进行初始化。\r\n      // 获取图片 DOM 节点\r\n      const image = this.$refs['preview-image']\r\n      // 第1次初始化好以后，如果预览裁切的图片发生了变化，裁切器默认不会更新\r\n      // 如果需要预览图片发生变化更新裁切器：\r\n      //    方式一：裁切器.replace 方法\r\n      //    方式二：销毁裁切器，重新初始化\r\n      // 初始化裁切器\r\n      if (this.cropper) {\r\n        this.cropper.replace(this.previewImage)\r\n        return\r\n      }\r\n      this.cropper = new Cropper(image, {\r\n        viewMode: 1,\r\n        dragMode: 'none',\r\n        aspectRatio: 1,\r\n        background: false,\r\n        cropBoxResizable: false\r\n\r\n        // 当你移动裁切器的时候会触发调用 crop 方法\r\n        // crop (event) {\r\n        //   console.log(event.detail.x)\r\n        //   console.log(event.detail.y)\r\n        //   console.log(event.detail.width)\r\n        //   console.log(event.detail.height)\r\n        //   console.log(event.detail.rotate)\r\n        //   console.log(event.detail.scaleX)\r\n        //   console.log(event.detail.scaleY)\r\n        // }\r\n      })\r\n    },\r\n    onDialogClosed () {\r\n      // 对话框关闭，销毁裁切器\r\n      // this.cropper.destroy()\r\n    },\r\n    onUpdatePhoto() {\r\n      this.updatePhotoLoading = true\r\n      // 获取裁切的图片对象\r\n      this.cropper?.getCroppedCanvas().toBlob(file => {\r\n        const fd = new FormData()\r\n        fd.append('photo', file)\r\n        // 请求更新用户头像\r\n        updateUserPhoto(fd).then(res => {\r\n          // 关闭对话框\r\n          this.dialogVisible = false\r\n          // 直接把裁切结果的文件对象转为 blob 数据本地预览\r\n          this.user.photo = window.URL.createObjectURL(file)\r\n          // 关闭确定按钮的 loading\r\n          this.updatePhotoLoading = false\r\n          this.$message({\r\n            type: 'success',\r\n            message: '更新头像成功'\r\n          })\r\n\r\n          // 更新顶部登录用户的信息\r\n          globalBus.$emit('update-user', this.user)\r\n        })\r\n      })\r\n\r\n      // 更新视图s\r\n    }\r\n  },\r\n  filters: {\r\n    fnName: function (value) {\r\n      return value\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n  .preview-image-wrap {\r\n    /* Ensure the size of the image fit the container perfectly */\r\n    .preview-image {\r\n      display: block;\r\n\r\n      /* This rule is very important, please don't ignore this */\r\n      max-width: 100%;\r\n      height: 200px;\r\n    }\r\n  }\r\n</style>\r\n"]}]}