{"remainingRequest":"D:\\webLearn\\Vue\\黑马头条\\后台\\publish-admin-test\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\webLearn\\Vue\\黑马头条\\后台\\publish-admin-test\\src\\views\\login\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\webLearn\\Vue\\黑马头条\\后台\\publish-admin-test\\src\\views\\login\\index.vue","mtime":1607165940197},{"path":"D:\\webLearn\\Vue\\黑马头条\\后台\\publish-admin-test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\webLearn\\Vue\\黑马头条\\后台\\publish-admin-test\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\webLearn\\Vue\\黑马头条\\后台\\publish-admin-test\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\webLearn\\Vue\\黑马头条\\后台\\publish-admin-test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\webLearn\\Vue\\黑马头条\\后台\\publish-admin-test\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCiAgaW1wb3J0IHsgbG9naW4gfSBmcm9tICdAL2FwaS91c2VyJwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0xvZ2luSW5kZXgnLAogIHByb3BzOiB7fSwKICBjb21wb25lbnRzOiB7CiAgfSwKICBkYXRhICgpIHsKICAgIHJldHVybiB7CiAgICAgIHVzZXI6IHsKICAgICAgICBtb2JpbGU6ICcxMzkxMTExMTExMScsIC8vIOaJi+acuuWPtwogICAgICAgIGNvZGU6ICcyNDY4MTAnLCAvLyDpqozor4HnoIEKICAgICAgICBhZ3JlZSA6IHRydWUgLy/mmK/lkKblkIzmhI/ljY/orq4KICAgICAgfSwKICAgICAgbG9naW5Mb2FkaW5nIDogZmFsc2UsCiAgICAgIC8vIOihqOWNlemqjOivgeinhOWImemFjee9rgogICAgICBmb3JtUnVsZXM6IHsKICAgICAgICBtb2JpbGU6WwogICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+aJi+acuuWPt+S4jeWPr+S7peS4uuepuicsIHRyaWdnZXI6ICdibHVyJyB9LAogICAgICAgICAgeyBwYXR0ZXJuOiAvXjFbM3w1fDd8OHw5XVxkezl9JC8sIG1lc3NhZ2U6ICfor7fovpPlhaXmraPnoa7nmoTlj7fnoIHmoLzlvI8nLCB0cmlnZ2VyOiAnY2hhbmdlJyB9CiAgICAgICAgXSwKICAgICAgICBjb2RlIDogWwogICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+mqjOivgeeggeS4jeWPr+S7peS4uuepuicsIHRyaWdnZXI6ICdibHVyJyB9LAogICAgICAgICAgeyBwYXR0ZXJuOiAvXlxkezZ9JC8sIG1lc3NhZ2U6ICfor7fovpPlhaXmraPnoa7nmoTpqozor4HnoIHmoLzlvI8nIH0KICAgICAgICBdLAogICAgICAgIGFncmVlOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgIC8vIOiHquWumuS5ieagoemqjOinhOWIme+8mmh0dHBzOi8vZWxlbWVudC5lbGVtZS5jbi8jL3poLUNOL2NvbXBvbmVudC9mb3JtI3ppLWRpbmcteWkteGlhby15YW4tZ3VpLXplCiAgICAgICAgICAgIC8vIOmqjOivgemAmui/h++8mmNhbGxiYWNrKCkKICAgICAgICAgICAgLy8g6aqM6K+B5aSx6LSl77yaY2FsbGJhY2sobmV3IEVycm9yKCfplJnor6/mtojmga8nKSkKICAgICAgICAgICAgdmFsaWRhdG9yOiAocnVsZSwgdmFsdWUsIGNhbGxiYWNrKSA9PiB7CiAgICAgICAgICAgICAgaWYgKHZhbHVlKXsKICAgICAgICAgICAgICAgIGNhbGxiYWNrKCkKICAgICAgICAgICAgICB9ZWxzZSB7CiAgICAgICAgICAgICAgICBjYWxsYmFjayhuZXcgRXJyb3IoJ+ivt+eUqOaIt+WQjOaEj+WNj+iuricpKQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgLy8gbWVzc2FnZTogJ+ivt+WLvumAieWQjOaEj+eUqOaIt+WNj+iuricsCiAgICAgICAgICAgIHRyaWdnZXI6ICdjaGFuZ2UnCiAgICAgICAgICB9CiAgICAgICAgXQogICAgICB9CiAgICB9CiAgfSwKICBjb21wdXRlZDogewogIH0sCiAgd2F0Y2g6IHsKICAgIGRhdGEgKG5ld1ZhbHVlLCBvbGRWYWx1ZSkgewoKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIG9uTG9naW4gKCkgewogICAgICAvL+ihqOWNlemqjOivgQogICAgICAvLyB2YWxpZGF0ZSDmlrnms5XmmK/lvILmraXnmoQKICAgICAgdGhpcy4kcmVmc1snbG9naW4tZm9ybSddLnZhbGlkYXRlKHZhbGlkID0+IHsKICAgICAgICAvLyDlpoLmnpzooajljZXpqozor4HlpLHotKXvvIzlgZzmraLor7fmsYLmj5DkuqQKICAgICAgICBpZiAoIXZhbGlkKSB7CiAgICAgICAgICByZXR1cm4KICAgICAgICB9CgogICAgICAgIC8vIOmqjOivgemAmui/h++8jOivt+axgueZu+W9lQogICAgICAgIHRoaXMubG9naW4oKQogICAgICB9KQogICAgfSwKICAgIGxvZ2luKCl7CiAgICAgIC8vIOiOt+WPluihqOWNleaVsOaNru+8iOagueaNruaOpeWPo+imgeaxgue7keWumuaVsOaNru+8iQogICAgICAvLyDotKblj7cgMTM5MTExMTExMTEKICAgICAgLy8g5a+G56CBIDI0NjgxMAogICAgICBjb25zdCB1c2VyID0gdGhpcy51c2VyCiAgICAgIC8v6aqM6K+B6YCa6L+HIOaPkOS6pOeZu+mZhgogICAgICAvLyDlvIDlkK/nmbvpmYbkuK0gbG9hZGluZy4uLgogICAgICB0aGlzLmxvZ2luTG9hZGluZyA9IHRydWUKICAgICAgbG9naW4odXNlcikudGhlbihyZXMgPT4gewogICAgICAgIGNvbnNvbGUubG9nKHJlcykKICAgICAgICB0aGlzLiRtZXNzYWdlKHsKICAgICAgICAgIG1lc3NhZ2UgOiAn55m76ZmG5oiQ5YqfJywKICAgICAgICAgIHR5cGU6ICdzdWNjZXNzJwogICAgICAgIH0pCiAgICAgICAgLy8g5bCG5o6l5Y+j6L+U5Zue55qE55So5oi355u45YWz5pWw5o2u5a2Y5YKo5Yiw5pys5Zyw77yMIOaWueS+v+aVsOaNruWFseS6qwogICAgICAgIC8vIOacrOWcsOWtmOWCqOWPquiDveWtmOWCqCDlrZfnrKbkuLIKICAgICAgICAvLyDlpoLmnpzpnIDopoHlrZjlgqjlr7nosaHjgIHmlbDnu4Tnm7jlhbPnmoTnsbvlnovvvIzliJnmiorku5bku6zovazljJbkuLpKU09O5qC85byP55qE5a2X56ym5Liy6L+b6KGM5a2Y5YKoCiAgICAgICAgd2luZG93LmxvY2FsU3RvcmFnZS5zZXRJdGVtKCd1c2VyJywgSlNPTi5zdHJpbmdpZnkocmVzLmRhdGEuZGF0YSkpCiAgICAgICAgLy/ot7PovazliLDpppbpobUKICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7CiAgICAgICAgICBuYW1lIDogJ2hvbWUnCiAgICAgICAgfSkKICAgICAgfSkuY2F0Y2goZXJyID0+IHsKICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCfnmbvlvZXlpLHotKXvvIzmiYvmnLrlj7fmiJbpqozor4HnoIHplJnor68nKQogICAgICB9KS5maW5hbGx5KHJlcyA9PiB7CiAgICAgICAgLy8g5YWz6ZetIGxvYWRpbmcKICAgICAgICB0aGlzLmxvZ2luTG9hZGluZyA9IGZhbHNlCiAgICAgIH0pCiAgICB9CiAgfSwKICBmaWx0ZXJzOiB7CiAgICBmbk5hbWUgOiBmdW5jdGlvbiAodmFsdWUpIHsKICAgICAgcmV0dXJuIHZhbHVlCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/login","sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <!--\r\n      el-form 表单组件\r\n      每个表单项都必须使用 el-form-item 组件包裹\r\n     -->\r\n\r\n    <div class=\"login-form-wrap\">\r\n      <div class=\"login-head\">\r\n        <div class=\"logo\"></div>\r\n      </div>\r\n      <!--\r\n        配置 Form表单验证\r\n        1. 给 el-from 组件绑定 model 为表单数据对象\r\n        2. 给需要验证的表单项 el-form-item 绑定 prop 属性\r\n           注意：prop 属性需要指定表单对象中的数据名称\r\n        3. 通过 el-from 组件的 rules 属性配置验证规则\r\n        4. ref 的作用主要用来获取表单组件手动触发验证\r\n      -->\r\n      <el-form class=\"login-form\"\r\n               ref=\"login-form\"\r\n               :model=\"user\"\r\n               :rules=\"formRules\">\r\n        <el-form-item prop=\"mobile\">\r\n          <el-input v-model=\"user.mobile\"\r\n                    placeholder=\"请输入手机号\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"code\">\r\n          <el-input v-model=\"user.code\" placeholder=\"请输入验证码\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"agree\">\r\n          <el-checkbox v-model=\"user.agree\"\r\n          >我已阅读并同意用户协议和隐私条款</el-checkbox\r\n          >\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button class=\"login-btn\"\r\n                     type=\"primary\"\r\n                     @click=\"onLogin\"\r\n                     :loading=\"loginLoading\"\r\n          >登录</el-button\r\n          >\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import { login } from '@/api/user'\r\nexport default {\r\n  name: 'LoginIndex',\r\n  props: {},\r\n  components: {\r\n  },\r\n  data () {\r\n    return {\r\n      user: {\r\n        mobile: '13911111111', // 手机号\r\n        code: '246810', // 验证码\r\n        agree : true //是否同意协议\r\n      },\r\n      loginLoading : false,\r\n      // 表单验证规则配置\r\n      formRules: {\r\n        mobile:[\r\n          { required: true, message: '手机号不可以为空', trigger: 'blur' },\r\n          { pattern: /^1[3|5|7|8|9]\\d{9}$/, message: '请输入正确的号码格式', trigger: 'change' }\r\n        ],\r\n        code : [\r\n          { required: true, message: '验证码不可以为空', trigger: 'blur' },\r\n          { pattern: /^\\d{6}$/, message: '请输入正确的验证码格式' }\r\n        ],\r\n        agree: [\r\n          {\r\n            // 自定义校验规则：https://element.eleme.cn/#/zh-CN/component/form#zi-ding-yi-xiao-yan-gui-ze\r\n            // 验证通过：callback()\r\n            // 验证失败：callback(new Error('错误消息'))\r\n            validator: (rule, value, callback) => {\r\n              if (value){\r\n                callback()\r\n              }else {\r\n                callback(new Error('请用户同意协议'))\r\n              }\r\n            },\r\n            // message: '请勾选同意用户协议',\r\n            trigger: 'change'\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n  },\r\n  watch: {\r\n    data (newValue, oldValue) {\r\n\r\n    }\r\n  },\r\n  methods: {\r\n    onLogin () {\r\n      //表单验证\r\n      // validate 方法是异步的\r\n      this.$refs['login-form'].validate(valid => {\r\n        // 如果表单验证失败，停止请求提交\r\n        if (!valid) {\r\n          return\r\n        }\r\n\r\n        // 验证通过，请求登录\r\n        this.login()\r\n      })\r\n    },\r\n    login(){\r\n      // 获取表单数据（根据接口要求绑定数据）\r\n      // 账号 13911111111\r\n      // 密码 246810\r\n      const user = this.user\r\n      //验证通过 提交登陆\r\n      // 开启登陆中 loading...\r\n      this.loginLoading = true\r\n      login(user).then(res => {\r\n        console.log(res)\r\n        this.$message({\r\n          message : '登陆成功',\r\n          type: 'success'\r\n        })\r\n        // 将接口返回的用户相关数据存储到本地， 方便数据共享\r\n        // 本地存储只能存储 字符串\r\n        // 如果需要存储对象、数组相关的类型，则把他们转化为JSON格式的字符串进行存储\r\n        window.localStorage.setItem('user', JSON.stringify(res.data.data))\r\n        //跳转到首页\r\n        this.$router.push({\r\n          name : 'home'\r\n        })\r\n      }).catch(err => {\r\n        this.$message.error('登录失败，手机号或验证码错误')\r\n      }).finally(res => {\r\n        // 关闭 loading\r\n        this.loginLoading = false\r\n      })\r\n    }\r\n  },\r\n  filters: {\r\n    fnName : function (value) {\r\n      return value\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n  .login-container {\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background: url('./login_bg.jpg') no-repeat;\r\n    background-size: cover;\r\n    .login-form-wrap {\r\n      min-width: 300px;\r\n      padding: 30px 50px 10px;\r\n      background-color: #fff;\r\n      .login-head {\r\n        display: flex;\r\n        justify-content: center;\r\n        .logo {\r\n          width: 200px;\r\n          height: 57px;\r\n          background: url('./logo_index.png') no-repeat;\r\n          background-size: contain;\r\n        }\r\n      }\r\n      .login-form {\r\n        .login-btn {\r\n          width: 100%;\r\n        }\r\n      }\r\n    }\r\n  }\r\n</style>\r\n"]}]}